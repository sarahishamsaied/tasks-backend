{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Task Service API",
    "description": "API documentation for the Task backend service. When testing the API please ignore the brackets in the url paths. They are only there to show the different endpoints for the same path."
  },
  "host": "localhost:3000/api/v1",
  "paths": {
    "/api/v1/task(create)": {
      "post": {
        "summary": "Creates a new task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Creates a new task",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/task(update)": {
      "put": {
        "summary": "Updates a task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "description": "Updates a task",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/task/user": {
      "get": {
        "summary": "Gets all tasks for a user",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/task/{id}(delete)": {
      "patch": {
        "summary": "Deletes a task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Task Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/task/status/{id}": {
      "patch": {
        "summary": "Updates the status of a task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "body",
            "description": "Task status",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["PENDING", "IN_PROGRESS", "COMPLETED"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Task Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/task/{id}": {
      "get": {
        "summary": "Gets a task by ID",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Task Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/api/v1/user/auth/register": {
      "post": {
        "summary": "Registers a new user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Signs up a new user to the application",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/UserRegistration"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "$ref": "#/definitions/UserRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/auth/login": {
      "post": {
        "summary": "Logs in a user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Signs in a user to the application",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "JWT token for the user"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/auth/deactivate/{id}": {
      "patch": {
        "summary": "Deactivates a user account",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/auth/reactivate/{id}": {
      "patch": {
        "summary": "Reactivates a user account",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "content": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["LOW", "MEDIUM", "HIGH"],
          "required": true
        },
        "status": {
          "type": "string",
          "enum": ["PENDING", "IN_PROGRESS", "COMPLETED"]
        },
        "startDate": {
          "type": "string",
          "required": true
        },
        "endDate": {
          "type": "string",
          "required": true
        }
      }
    },
    "TaskResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "UserRegistration": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "UserRegistrationResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deletedAt": {
          "type": "string"
        }
      }
    }
  }
}
